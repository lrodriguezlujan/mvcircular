% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/mvCircTruncNormal.R
\name{mvCircTruncNormal}
\alias{circCor.mvCircTruncNormal}
\alias{circMarginal.mvCircTruncNormal}
\alias{circMarginalConcentration.mvCircTruncNormal}
\alias{circMarginalMean.mvCircTruncNormal}
\alias{dmvCircTruncNormal}
\alias{fval.mvCircTruncNormal}
\alias{getSamples.mvCircTruncNormal}
\alias{mvCircTruncNormal}
\alias{mvCircTruncNormal.fit}
\alias{rmvCircTruncNormal}
\title{Multivariate circular truncated normal distribution}
\usage{
mvCircTruncNormal(mu, sigma, ...)

mvCircTruncNormal.fit(samples, zero.threshold = 0.01, ...)

rmvCircTruncNormal(n, mu, sigma, ...)

dmvCircTruncNormal(x, mu, sigma, ...)

\method{getSamples}{mvCircTruncNormal}(obj, n, ...)

\method{fval}{mvCircTruncNormal}(obj, x, ...)

\method{circMarginal}{mvCircTruncNormal}(obj, x, i)

\method{circMarginalMean}{mvCircTruncNormal}(obj, i)

\method{circMarginalConcentration}{mvCircTruncNormal}(obj, i)

\method{circCor}{mvCircTruncNormal}(obj, i, j)
}
\arguments{
\item{mu}{Circular mean vector}

\item{sigma}{a positive-definite symmetric matrix that specifies covariance matrix}

\item{...}{(\code{rmvCircTruncNormal}) Additional parameters for \code{\link{tmvtnorm::rtmvnorm} }}

\item{samples}{Matrix or DF with multivariate circular samples}

\item{zero.threshold}{Any sigma value that verifies that \code{abs(x) < zero.threshold } is returned as zero}

\item{n}{Number of samples to generate}

\item{x}{The point to evaluate}

\item{\dots}{(Constructor) Named list with additional attributes to add to the object}

\item{...}{(\code{dmvCircTruncNormal}) extra arguments for \code{\link{tmvtnorm::dtmvnorm}}}
}
\value{
\code{mvCircTruncNormal} returns a mvCircTruncNormal object

\code{rmvCircTruncNormal} returns a multivariate circular dataframe with \code{n}
samples from a truncated circular normal distribution

\code{dmvCircTruncNormal} returns the density function evaluated at \code{x}
}
\description{
These functions implement diverse functionality over the
multivariate wrapped normal distribution given its parameters mu, the circular mean vector,
and sigma, the variance covariance matrix.

Fit method uses data matrix or dataframe \code{samples} to compute the ML parameters of the distribution

\code{dmvCircTruncNormal} computes multivariate circular normal densitiy function approximately.
}
\examples{
mvCircTruncNormal(rep(0,3), diag(3) )
samples <- rmvCircTruncNormal(100000, rep(pi,3), matrix( c(3,1,-1,1,3,0,-1,0,3), ncol = 3 , nrow = 3 )   )
obj <- mvCircTruncNormal.fit(samples)
sum(abs(obj$mu - rep(pi,3)))
sum(abs(obj$sigma - matrix( c(3,1,-1,1,3,0,-1,0,3), ncol = 3 , nrow = 3 ) ))
plot(obj, obj$fitted.data [1:1000,])
samples <- rmvCircTruncNormal(100, rep(pi,2), diag(2) )
plot(as.numeric(samples[,1]), as.numeric(samples[,2]) )
dmvCircTruncNormal(c(0,0,0), rep(0,3), 1000*diag(3) )
dmvCircTruncNormal(c(0,0,0), rep(0,3), 0.1*diag(3))
dmvCircTruncNormal(c(pi,pi,pi), rep(0,3), diag(3) )
obj <- mvCircTruncNormal(rep(pi,2), diag(2) )
samples <- getSamples(obj,100)
plot(as.numeric(samples[,1]), as.numeric(samples[,2]) )
obj <- mvCircTruncNormal(rep(0,3), diag(3) )
fval(obj,c(0,0,0))
fval(obj,c(2*pi,2*pi,2*pi))
fval(obj,c(pi,pi,pi))

obj <- mvCircTruncNormal(rep(0,3), 1000*diag(3) )
fval(obj,c(0,0,0))

obj <- mvCircTruncNormal(rep(0,3), 0.1*diag(3) )
fval(obj,c(0,0,0))
}
\author{
Luis Rodriguez Lujan
}
\seealso{
\code{\link{mvCircTruncNormal}}
}
\keyword{circular}
\keyword{multivariate}
\keyword{normal}
\keyword{truncated}


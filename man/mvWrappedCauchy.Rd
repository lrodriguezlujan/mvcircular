% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mvWrappedCauchy.R
\name{mvWrappedCauchy}
\alias{circCor.mvWrappedCauchy}
\alias{circMarginal.mvWrappedCauchy}
\alias{circMarginalConcentration.mvWrappedCauchy}
\alias{circMarginalMean.mvWrappedCauchy}
\alias{dmvWrappedCauchy}
\alias{fval.mvWrappedCauchy}
\alias{getSamples.mvWrappedCauchy}
\alias{mvWrappedCauchy}
\alias{mvWrappedCauchy.fit}
\alias{rmvWrappedCauchy}
\title{Multivariate wrapped Cauchy distribution}
\usage{
mvWrappedCauchy(mu, sigma, ...)

mvWrappedCauchy.fit(samples, zero.threshold = 0.01)

rmvWrappedCauchy(n, mu, sigma, ...)

dmvWrappedCauchy(x, mu, sigma, k = 10)

\method{getSamples}{mvWrappedCauchy}(obj, n, ...)

\method{fval}{mvWrappedCauchy}(obj, x, k = 10)

\method{circMarginal}{mvWrappedCauchy}(obj, x, i)

\method{circMarginalMean}{mvWrappedCauchy}(obj, i)

\method{circMarginalConcentration}{mvWrappedCauchy}(obj, i)

\method{circCor}{mvWrappedCauchy}(obj, i, j)
}
\arguments{
\item{mu}{Circular mean vector}

\item{sigma}{a positive-definite symmetric matrix that specifies covariance matrix}

\item{...}{(\code{rmvWrappedCauchy}) Additional parameters for \code{\link{mvtnorm::rmvnorm} }}

\item{samples}{Matrix or DF with mv circular samples}

\item{zero.threshold}{Any sigma value that verifies that \code{abs(x) < zero.threshold } is returned as zero}

\item{n}{Number of samples to generate}

\item{x}{The point to evaluate}

\item{k}{Number of points per dimension}

\item{\dots}{(Constructor) Named list with additional attributes to add to the object}
}
\value{
\code{mvWrappedCauchy.fit} returns a mvWrappedCacuhy object

\code{rmvWrappedCauchy} returns a multivariate circular dataframe with \code{n} 
samples from a wrapped-Cauchy distribution
}
\description{
These functions implement diverse functionality over the 
multivariate wrapped normal distribution given its parameters mu, the circular mean vector,
and sigma, the variance covariance matrix.

\code{mvWrappedCauchy.fit} uses data matrix or dataframe \code{samples} to compute the ML parameters of the distribution

\code{dmvWrappedCauchy} computes multivariate wrapped normal densitiy function approximately. The precission is controled by
 \code{k}, the number of points to evaluate per dimension. The total number of points will be  \code{(k+1) ^ ndim} (Z-lattice)
}
\note{
\code{rmvWrappedCauchy} sampling  and density function method is based on the code from  the (discontinued) 
\code{LaplacesDaemon} package.
}
\examples{
mvWrappedCauchy(rep(0,3), diag(3) )

samples <- rmvWrappedCauchy(1E5, rep(pi,3), matrix( c(0.3,.1,-.1,.1,.3,0,-.1,.0,.3), ncol = 3 , nrow = 3 )   )
obj <-mvWrappedCauchy.fit(samples)
sum(abs(obj$mu - rep(pi,3)))
sum(abs(obj$sigma - matrix( c(0.3,.1,-.1,.1,.3,0,-.1,.0,.3), ncol = 3 , nrow = 3 ) ))
plot(obj, data = obj$fitted.data[1:1000,])

samples <- rmvWrappedCauchy(100, rep(pi,2), diag(2) )
plot(as.numeric(samples[,1]), as.numeric(samples[,2]) )

dmvWrappedCauchy(c(0,0,0), rep(0,3), 1000*diag(3) )
dmvWrappedCauchy(c(0,0,0), rep(0,3), 1000*diag(3),k = 20)
dmvWrappedCauchy(c(0,0,0), rep(0,3), 1000*diag(3),k = 2)
dmvWrappedCauchy(c(0,0,0), rep(0,3), 0.1*diag(3),k = 2)
dmvWrappedCauchy(c(pi,pi,pi), rep(0,3), diag(3) )

obj <- mvWrappedCauchy(rep(pi,2), diag(2) )
samples <- getSamples(obj,100)
plot(as.numeric(samples[,1]), as.numeric(samples[,2]) )

obj <- mvWrappedCauchy(rep(0,3), diag(3) )
fval(obj,c(0,0,0))
fval(obj,c(2*pi,2*pi,2*pi))
fval(obj,c(pi,pi,pi))

obj <- mvWrappedCauchy(rep(0,3), 1000*diag(3) )
fval(obj,c(0,0,0), k= 60 ) # High accuracy
fval(obj,c(0,0,0), k= 20 )
fval(obj,c(0,0,0), k = 2 ) # Low accuracy due to dispersion

obj <- mvWrappedCauchy(rep(0,3), 0.1*diag(3) )
fval(obj,c(0,0,0), k= 60 ) # Low dispersion, almost all density is inside 0,2pi 
fval(obj,c(0,0,0), k= 2 ) # Low dispersion, almost all density is inside 0,2pi 

}
\author{
Luis Rodriguez Lujan
}
\seealso{
\code{\link{mvCircularProbDist}}
}
\keyword{cauchy}
\keyword{multivariate}
\keyword{wrapped}


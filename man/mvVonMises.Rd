% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MvVmDist.R
\name{mvVonMises}
\alias{circCor.mvVonMises}
\alias{circMarginal.mvVonMises}
\alias{circMarginalConcentration.mvVonMises}
\alias{circMarginalMean.mvVonMises}
\alias{dmvVonMises}
\alias{fval.mvVonMises}
\alias{getSamples.mvVonMises}
\alias{mvVonMises}
\alias{mvVonMises.fit}
\alias{normalize.mvVonMises}
\alias{rmvVonMises}
\title{Multivariate von mises distribution}
\usage{
mvVonMises(mu, kappa, lambda, ...)

mvVonMises.fit(samples, zero.threshold = 0.01, ...)

rmvVonMises(n, mu, kappa, lambda, ...)

dmvVonMises(x, mu, kappa, lambda, z = NULL)

\method{normalize}{mvVonMises}(obj, normalization.samples = 1e+06)

\method{getSamples}{mvVonMises}(obj, n, ...)

\method{fval}{mvVonMises}(obj, x, ...)

\method{circMarginal}{mvVonMises}(obj, x, i)

\method{circMarginalMean}{mvVonMises}(obj, i)

\method{circMarginalConcentration}{mvVonMises}(obj, i)

\method{circCor}{mvVonMises}(obj, i, j)
}
\arguments{
\item{mu}{Circular mean vector, can be double}

\item{kappa}{Concentration vector}

\item{lambda}{Square depenedency matrix}

\item{samples}{Matrix or DF with mv circular samples}

\item{zero.threshold}{Any lambda value that verifies that \code{abs(x) < zero.threshold } is returned as zero}

\item{n}{Number of samples to generate}

\item{x}{numeric or circular vector. Can also be a matrix}

\item{z}{normalization term}

\item{obj}{A multivariate von Mises distribution}

\item{normalization.samples}{Number of points to evaluate in the mc integration}

\item{\dots}{(\code{mvVonMises}) Named list with aditional parameters to include in the object}

\item{\dots}{(\code{fit}) Additional parameters for \code{\link{fit_mvvonmises}}}

\item{\dots}{(\code{rmvVonMises}) Additional parameters for \code{\link{rmvvonmises_rs}}}
}
\value{
\code{mvVonMises.fit} returns a multivariate VonMises object fitted from data

\code{rmvVonMises} returnrs a circular df with n samples

\code{normalize} returns a multivariate von Mises object with the approximated normalization term (z)
}
\description{
These functions implement diverse functionality over the 
multivariate von mises distribution given its parameters mu, the circular mean vector,
kappa, the concentration vector, and lambda, the dependency matrix.

Fit method uses data matrix or dataframe \code{samples} to compute the ML parameters of the distribution

\code{rmvVonMises} samples n instances from a multivariate von Mises distribution

\code{dmvVonMises} computes von Mises density function value at the given points

\code{Normalize} approximates the normalization
term using monte-carlo integration over a uniform mesh.
}
\examples{
mvVonMises(rep(0,3), rep(1,3), matrix(0,ncol=3,nrow=3) )

samples <- rmvVonMises(1E5, rep(0,4), rep(1,4), matrix(0,ncol=4,nrow=4) )
obj.fitted <- mvVonMises.fit(samples)
plot(obj.fitted, data = obj.fitted$fitted.data[1:1000,])

obj <- mvVonMises(rep(0,3), rep(1,3), matrix(0,ncol=3,nrow=3) )
obj <- normalize(obj, normalization.samples = 1E6)
obj$z

obj <- mvVonMises(rep(0,3), rep(1,3), matrix(0,ncol=3,nrow=3) )
plot(getSamples(obj,100))

obj <- mvVonMises(rep(0,3), rep(1,3), matrix(0,ncol=3,nrow=3) )
# Compute normalization term
obj <- normalize(obj, normalization.samples = 1E6)
fval(obj, c(0,0,0))
# unnormalzied value
dmvVonMises(c(0,0,0),rep(0,3), rep(1,3), matrix(0,ncol=3,nrow=3) )

}
\author{
Luis Rodriguez Lujan
}
\seealso{
\code{\link{mvCircularProbDist}}
}
\keyword{multivariate}
\keyword{vonmises}


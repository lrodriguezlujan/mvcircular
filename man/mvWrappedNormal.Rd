% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/mvWrappedNormal.R
\name{mvWrappedNormal}
\alias{circCor.mvWrappedNormal}
\alias{circMarginal.mvWrappedNormal}
\alias{circMarginalConcentration.mvWrappedNormal}
\alias{circMarginalMean.mvWrappedNormal}
\alias{dmvWrappedNormal}
\alias{fval.mvWrappedNormal}
\alias{getSamples.mvWrappedNormal}
\alias{mvWrappedNormal}
\alias{mvWrappedNormal.fit}
\alias{rmvWrappedNormal}
\title{Multivariate wrapped normal distribution}
\usage{
mvWrappedNormal(mu, sigma, ...)

mvWrappedNormal.fit(samples, zero.threshold = 0.01, ...)

rmvWrappedNormal(n, mu, sigma, ...)

dmvWrappedNormal(x, mu, sigma, k = 10, ...)

\method{getSamples}{mvWrappedNormal}(obj, n, ...)

\method{fval}{mvWrappedNormal}(obj, x, k = 10, ...)

\method{circMarginal}{mvWrappedNormal}(obj, x, i)

\method{circMarginalMean}{mvWrappedNormal}(obj, i)

\method{circMarginalConcentration}{mvWrappedNormal}(obj, i)

\method{circCor}{mvWrappedNormal}(obj, i, j)
}
\arguments{
\item{mu}{Circular mean vector}

\item{sigma}{a positive-definite symmetric matrix that specifies covariance matrix}

\item{...}{(\code{rmvWrappedNormal}) Additional parameters for \code{\link{mvtnorm::rmvnorm} }}

\item{samples}{Matrix or DF with multivariate circular samples}

\item{zero.threshold}{Any sigma value that verifies that \code{abs(x) < zero.threshold } is returned as zero}

\item{n}{Number of samples to generate}

\item{x}{The point to evaluate}

\item{k}{Number of points per dimension}

\item{\dots}{(Constructor) Named list with additional attributes to add to the object}

\item{...}{(\code{dmvWrappedNormal}) extra arguments for \code{\link{mvtnorm::dmvnorm}}}
}
\value{
\code{mvWrappedNormal} returns a mvWrappedNormal object

\code{rmvWrappedNormal} returns a multivariate circular dataframe with \code{n}
samples from a wrapped-normal distribution

\code{dmvWrappedNormal} returns the density function evaluated at \code{x}
}
\description{
These functions implement diverse functionality over the
multivariate wrapped normal distribution given its parameters mu, the circular mean vector,
and sigma, the variance covariance matrix.

Fit method uses data matrix or dataframe \code{samples} to compute the ML parameters of the distribution

\code{dmvWrappedNormal} computes multivariate wrapped normal densitiy function approximately. The precission is controled by
\code{k}, the number of points to evaluate per dimension. The total number of points will be  (k+1) ^ ndim (Z-lattice)
}
\examples{
mvWrappedNormal(rep(0,3), diag(3) )
samples <- rmvWrappedNormal(100000, rep(pi,3), matrix( c(3,1,-1,1,3,0,-1,0,3), ncol = 3 , nrow = 3 )   )
obj <- mvWrappedNormal.fit(samples)
sum(abs(obj$mu - rep(pi,3)))
sum(abs(obj$sigma - matrix( c(3,1,-1,1,3,0,-1,0,3), ncol = 3 , nrow = 3 ) ))
plot(obj, obj$fitted.data )
samples <- rmvWrappedNormal(100, rep(pi,2), diag(2) )
plot(as.numeric(samples[,1]), as.numeric(samples[,2]) )
dmvWrappedNormal(c(0,0,0), rep(0,3), 1000*diag(3) )
dmvWrappedNormal(c(0,0,0), rep(0,3), 1000*diag(3),k = 20)
dmvWrappedNormal(c(0,0,0), rep(0,3), 1000*diag(3),k = 2)
dmvWrappedNormal(c(0,0,0), rep(0,3), 0.1*diag(3),k = 2)
dmvWrappedNormal(c(pi,pi,pi), rep(0,3), diag(3) )
obj <- mvWrappedNormal(rep(pi,2), diag(2) )
samples <- getSamples(obj,100)
plot(as.numeric(samples[,1]), as.numeric(samples[,2]) )
obj <- mvWrappedNormal(rep(0,3), diag(3) )
fval(obj,c(0,0,0))
fval(obj,c(2*pi,2*pi,2*pi))
fval(obj,c(pi,pi,pi))

obj <- mvWrappedNormal(rep(0,3), 1000*diag(3) )
fval(obj,c(0,0,0), k= 60 ) # High accuracy
fval(obj,c(0,0,0), k= 20 )
fval(obj,c(0,0,0), k = 2 ) # Low accuracy due to dispersion

obj <- mvWrappedNormal(rep(0,3), 0.1*diag(3) )
fval(obj,c(0,0,0), k= 60 ) # Low dispersion, almost all density is inside 0,2pi
fval(obj,c(0,0,0), k= 2 ) # Low dispersion, almost all density is inside 0,2pi
}
\author{
Luis Rodriguez Lujan
}
\seealso{
\code{\link{mvCircularProbDist}}
}
\keyword{multivariate}
\keyword{normal}
\keyword{wrapped}

